FROM python:3.12-slim

# Install system dependencies including build tools and OCR dependencies
RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \
    git \
    git-lfs \
    wget \
    libgl1 \
    libglib2.0-0 \
    build-essential \
    python3-dev \
    libpython3-dev \
    gcc \
    g++ \
    libc-dev \
    cmake \
    pkg-config \
    libgomp1 \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && git lfs install

# Set the working directory in the container
WORKDIR /usr/src/app


# Upgrade pip and install build tools
RUN pip install --upgrade pip && \
    pip install --no-cache-dir wheel setuptools

# Install dependencies in specific order to handle complex requirements
RUN pip install --no-cache-dir torch torchvision && \
    pip install --no-cache-dir numpy && \
    pip install --no-cache-dir opencv-python-headless==4.8.1.78 && \
    pip install --no-cache-dir paddlepaddle && \
    pip install --no-cache-dir flask flask-cors

WORKDIR /usr/src/app

# Copy project files and requirements
COPY . .
RUN ls -lR
RUN pwd


RUN pip install --no-cache-dir -r requirements.txt
    

# Initialize Git LFS and pull LFS files
RUN git lfs install && \
    git lfs pull

# Run download.py to fetch model weights and convert safetensors to .pt format
RUN echo "Contents of weights directory:" && \
    ls -lR weights && \
    python weights/convert_safetensor_to_pt.py

# Create directory for uploaded images
RUN mkdir -p /usr/src/app/imgs

# Expose the port
EXPOSE 7862

# Copy and set permissions for entrypoint script
COPY entrypoint.sh /usr/src/app/entrypoint.sh
RUN chmod +x /usr/src/app/entrypoint.sh

# Set the entrypoint
ENTRYPOINT ["/usr/src/app/entrypoint.sh"]
